/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/others.js":
/*!***********************!*\
  !*** ./src/others.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showTask: () => (/* binding */ showTask)\n/* harmony export */ });\n\n\n\nfunction showTask(){ //show and hide task for project\n  let click = true;\n  let project = document.querySelectorAll('div.item1 > div.project');\n  let todo = document.querySelectorAll('div.item1 > div.todo');\nconsole.log(todo);\n        project.forEach((node, index) => node.addEventListener('click', (e) => {\n         if( click == true){\n              console.log(' i am here');\n              todo[index].setAttribute('style', 'background-color: yellow');\n              todo[index].setAttribute('style', 'display: block');\n           click = false;\n          }\n          else if( click == false){\n              project = document.querySelectorAll('div.item1 > div.project');\n              todo[index].setAttribute('style', 'background-color: none')\n              todo[index].setAttribute('style', 'display: none');\n\n           console.log('none');\n           click = true;\n          }\n  \n        }));\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n//import { projectsList} from \"./functions\";\n//export { myFunction, myFunction2};\n  /*\nlet node1 = document.querySelectorAll('#projects-list > div');\nlet node2 = document.querySelectorAll('#projects-list button');\nconsole.log(node1);\nconsole.log(node2);\n\nlet index1;\nfunction rempj(x){\n  x[index1].remove();\n}\n\nfunction myFunction(){   \n    node1 = document.querySelectorAll('#projects-list > div');\n    node2 = document.querySelectorAll('#projects-list button');\n    node1.forEach((node, index) => node.addEventListener('mouseover', (e) => {\n      node1[index].setAttribute('style', 'background-color: pink');\n    }));\n    node1.forEach((node, index) => node.addEventListener('mouseleave', (e) => {\n      node1[index].setAttribute('style' , 'background-color: none');\n    }));\n}\n\nfunction myFunction2(){\n  node2 = document.querySelectorAll('#projects-list button');\n  node1 = document.querySelectorAll('#projects-list > div');\nconsole.log(node2)\n  node2.forEach((node, index) => node.addEventListener('mouseover', (e) => {\n    index1 = index;\n    node2[index].setAttribute('style' , 'background-color: yellow');\n    console.log(index);\n    console.log(index1);\n\n  }));\n  node2.forEach((node, index) => node.addEventListener('mouseleave', (e) => {\n    node2[index].setAttribute('style' , 'background-color: none');\n  }));\n\n  node2.forEach((node, index) => node.addEventListener('click', (e) => { \n    rempj(node1);\n    projectsList.splice(index1, 1);\n //   node1 = document.querySelectorAll('#projects-list > div');\n   // node2 = document.querySelectorAll('#projects-list button');\n //   pj = projectsList.length;\n  }));\n}\n//myFunction2()\n//myFunction();\n\n\n\n/*\nlet delProject = Array.from(document.querySelectorAll('#projects-list button'));\nlet indexDel;\n\n//let indexDel;\n/*function deleteProject(){\n    delProject.splice(indexDel, 1);\n   // delProject[indexDel].remove(indexDel);\n    projectsList.splice(indexDel, 1);\n    projects[indexDel].remove(indexDel);\n    projects.splice(indexDel, 1);\n}\nfunction removeProject(){\n  delProject = Array.from(document.querySelectorAll('#projects-list button'));\n  delProject.forEach((button) => button.addEventListener('click', (e) => {\n      button.setAttribute('style', 'background-color: yellow'); \n\n      function checkIndex(button){\n            if(button.style.backgroundColor == 'yellow'){\n              return button; \n            }}; \n       indexDel = delProject.findIndex(checkIndex);\n     //   deleteProject();\n       console.log(projectsList);\n       console.log(delProject);\n       console.log(indexDel);\n       button.removeAttribute('style'); \n\n       delProject.splice(indexDel, 1);\n   //    delProject[indexDel].remove(indexDel);\n       projectsList.splice(indexDel, 1);\n   //    projects[indexDel].remove(indexDel);\n       projects.splice(indexDel);\n       delProject = Array.from(document.querySelectorAll('#projects-list button'));\n\n      }));\n  }\n  //removeProject();\n\n  //delProject.forEach((button) => button.addEventListener('mouseup', (e) => {\n   // button.removeAttribute('style');\n//}))\n*/\n\n// function.js\n/*\nexport  {hiYou, addProject, addItems, backgroundDiv,\n  removeTask};\nexport  {n, s, endDate, projectStatus, projectsList};\nexport  {t, d, hourDue, taskStatus, tasksList};\n\nfunction hiYou(){\n    console.log('how are you');\n}\n\n//add projects\nconst projectsList = ['item'];\nconst tasksList = ['item'];\n\nconst n = document.querySelector('#projectTitle');\nconst s = document.querySelector('#startDate');\nconst endDate = document.querySelector('#startDate');\nconst projectStatus = document.querySelector('#projectStatus');\n\nfunction addProject(){ //add projects items\n    function createProject(name){ //create  project object with factory function\n      name = n.value;\n      const start = s.value;\n      const end = endDate.value;\n      const status = projectStatus.checked;\n      tasksList;\n      return { name, start, end, status, tasksList};\n    }\n    const item = createProject();\n    projectsList.push(item);\n}\n/*let projects = Array.from(document.querySelectorAll('#projects-list > div.project'));\nlet indexProj;\n\n\nfunction backgroundProject(){\n  let click = true;\n  projects = Array.from(document.querySelectorAll('#projects-list > div.project'));   \n  projects.forEach((div) => div.addEventListener('mouseover', (e) => {\n       //   if ( click == true){\n           div.setAttribute('style', 'background-color: grey');\n       //   }\n         }));\n  projects.forEach((div) => div.addEventListener('mouseleave', (e) => {\n//       if ( click == true){\n        div.removeAttribute('style');\n        click = true;\n//   }\n    \n    }));\n\n    projects.forEach((div) => div.addEventListener('click', (e) =>{\n      \n      function projectNumber(div){\n             if( div.style.backgroundColor == 'red'){\n             return div;\n           }};\n          if (click == true){\n               div.style.backgroundColor = 'red';\n               indexProj = projects.findIndex(projectNumber);\n               click = false;\n           }else if( click == false){\n         //      div.style.backgroundColor = '';\n               click = true;\n           }  \n    }));\n\n}\n\n  function removeProject(){\n    console.log('hi');\n    }\n    //removeProject();\n    */\n//add todo tasks\n/*\nconst t = document.querySelector('#title');\nconst d = document.querySelector('#date');\nconst hourDue = document.querySelector('#hourDue')\nconst taskStatus = document.querySelector('#taskStatus');\n\nfunction addItems(){ //add to do items\n    function createTask(title){ //create object with factory function\n     title = t.value;\n     const date = d.value;\n     const hour = hourDue.value;\n     const status = taskStatus.checked;\n    return { title, date, hour, status};\n  }\n  const item = createTask();\n  tasksList.push(item);\n}\n\nlet arrTask = Array.from(document.querySelectorAll('#task_list > div.task'));\nlet indexTask;\n\nfunction backgroundDiv(){\n      let click = true;\n        arrTask = Array.from(document.querySelectorAll('#task_list > div.task'));\n        arrTask.forEach((div) => div.addEventListener('mouseover', (e) => {\n     //   if ( click == true){\n          div.setAttribute('style', 'background-color: grey');\n     //   }\n        }));\n        arrTask.forEach((div) => div.addEventListener('mouseleave', (e) => {\n   //       if ( click == true){\n          div.removeAttribute('style');\n          click = true;\n       //   }\n          \n        }));\n      arrTask.forEach((div) => div.addEventListener( 'click', (e) => {\n        function checkIndex(div){\n              if(div.style.backgroundColor == 'red'){\n                return div; \n          }} \n              if(click == true){ \n                div.style.backgroundColor = 'red'; \n                indexTask = arrTask.findIndex(checkIndex);\n                click = false;\n              }\n              else if (click == false){\n          //      div.setAttribute('style', 'background-color: grey');\n                click = true;\n              }\n              console.log(indexTask);\n              console.log(click);\n        }));\n      }\n      backgroundDiv();\n\n  function removeTask(){\n    if( indexTask == undefined) return;\n          tasksList.splice(indexTask, 1);\n          arrTask[indexTask].remove(indexTask);\n          arrTask.splice(indexTask, 1);\n          indexTask = undefined;\n    }\n\n\n\n\n\n\n\n/*\n  //    delProject.forEach((button) => button.addEventListener('mouseup', (e) => {\n  //  removeProject();\n    //    j = j -1;\n\n      //  button.style.backgroundColor = '';\n   // }))\n   function deleteProject(){\n    projectsList.splice(indexDel, 1);\n    projects[indexDel].remove(indexDel);\n    delProject[indexDel].remove(indexDel);\n    projects.splice(indexDel, 1);\n    delProject.splice(indexDel, 1);\n    console.log(indexDel);\n  }\n  function del1(){\n    delProject = Array.from(document.querySelectorAll('#projects-list button'));\n    projects = Array.from(document.querySelectorAll('#projects-list > div.project'));\n\n      delProject.forEach((button) => button.addEventListener('click', (e) => {\n        removeProject();\n          deleteProject();\n\n      }));\n  \n    }\n\n// index.js\n\n/*\nimport _ from 'lodash';\nimport './style.css';\nimport printMe from'./print.js';\nimport { addProject, addItems, hiYou, backgroundDiv, \n      removeTask} from './functions.js';\nimport {n, s, endDate, projectStatus, projectsList} from './functions.js';\nimport {t, d, hourDue, taskStatus, tasksList} from './functions.js';\n//import { removeProject, delProject} from './others.js';\n\nprintMe();\nhiYou();\nlet node = document.querySelectorAll('#projects-list > div.project');\nlet delProject = Array.from(document.querySelectorAll('#projects-list button.del'));\nlet indexDel;\nlet projects = Array.from(document.querySelectorAll('#projects-list > div.project'));\nlet indexProj;\n\nlet j = projectsList.length; //index number for projects\n\nconst addTaskBtn = document.querySelector('#addToDo');\nconst addProjectBtn = document.querySelector('#addProject');\nconst projects_list = document.querySelector('#projects-list');\nconst task_list = document.querySelector('#task_list');\nconst callProjectForm = document.querySelector('#call-project-form'); //button\nconst callTaskForm = document.querySelector('#call-task-form'); //button\nconst dialogProject = document.querySelector('#dialog-project');\nconst dialogTask = document.querySelector('#dialog-task');\nconst removeBtn = document.querySelector('#remove-task');\n\ncallProjectForm.addEventListener('click', () => {\n   dialogProject.showModal(); \n});\ncallTaskForm.addEventListener('click', () => {\n  dialogTask.showModal();\n});\n\n//projects\naddProjectBtn.addEventListener('click', () =>{\n\n  dialogProject.close();\n  if(n.value == '' && s.value == '') return;\n  const div0 = document.createElement('div');\n  const div1 = document.createElement('div');\n  const div2 = document.createElement('div');\n  const div3 = document.createElement('div');\n  const del = document.createElement('button');\n  const checkbox = document.createElement('input');\n  div0.classList.add('project');\n  div1.classList.add('name');\n  div2.classList.add('start', 'width');\n  div3.classList.add('end', 'width');\n  del.classList.add('del');\n  checkbox.setAttribute('type', 'checkbox');\n  checkbox.classList.add('check');\n  checkbox.setAttribute('name', 'status');\n  del.setAttribute('type', 'submit');\n  addProject();\n  div1.textContent = projectsList[j].name;\n  div2.textContent = 'Start: ' + projectsList[j].start;\n  div3.textContent = 'End: ' + projectsList[j].end;\n  del.textContent = 'delete';\n  checkbox.checked = projectsList[j].status;\n  div0.append(div1, div2, div3, del, checkbox);\n  projects_list.appendChild(div0);\n  n.value = '';\n  s.value = '';\n  endDate.value = '';\n  projectStatus.checked = false;\n  j =  j + 1;\n  delProject = Array.from(document.querySelectorAll('#projects-list button.del'));\n  //projects = Array.from(document.querySelectorAll('#projects-list > div.project'));\n  removeProject();\n // delProject.push(del)\n\n  projects.push(div0);\n  console.log(delProject);\n  console.log(projects);\n  node = document.querySelectorAll('#projects-list > div.project');\n  backgroundProject();\n  del1();\n});\nconsole.log(delProject);\nconsole.log(projects);\nconsole.log(node);\n\nbackgroundProject();\n\n//tasks\nlet i = tasksList.length; // index and node number for task\n//console.log(i);\naddTaskBtn.addEventListener('click', () =>{\n  \n    dialogTask.close();\n    if(t.value == '' && d.value == '') return;\n    const div0 = document.createElement('div');\n    const div1 = document.createElement('div');\n    const div2 = document.createElement('div');\n    const div3 = document.createElement('div');\n    const del = document.createElement('button');\n    const checkbox = document.createElement('input');\n    \n    div0.classList.add('task');\n    div1.classList.add('title');\n    div2.classList.add('date', 'width');\n    div3.classList.add('hour', 'width');\n    del.classList.add('del');\n    checkbox.setAttribute('type', 'checkbox');\n    checkbox.classList.add('check');\n    checkbox.setAttribute('name', 'status');\n\n    addItems();\n    div1.textContent = tasksList[i].title;\n    div2.textContent = 'day: ' + tasksList[i].date;\n    div3.textContent = 'hour: ' + tasksList[i].hour;\n    del.textContent = 'delete';\n    checkbox.checked = tasksList[i].status;\n    div0.append(div2, div3, div1, del, checkbox);\n    task_list.appendChild(div0);\n    t.value = '';\n    d.value = '';\n    hourDue.value = '';\n    taskStatus.checked = false;\n    i =  i + 1;\n    backgroundDiv();\n});\n\nremoveBtn.addEventListener('click', () => {\n  removeTask();\n  i = tasksList.length;\n});\n\n//delProject = Array.from(document.querySelectorAll('#projects-list button'));\n//projects = Array.from(document.querySelectorAll('#projects-list > div.project'));  \nfunction del1(){\ndelProject.forEach((button) => button.addEventListener('mouseover', (e) => {\n  delProject = Array.from(document.querySelectorAll('#projects-list button'));\n\n  button.setAttribute('style', 'background-color: yellow'); \n\n function checkIndex(button){\n       if(button.style.backgroundColor == 'yellow'){\n         return button; \n       }}; \n  indexDel = delProject.findIndex(checkIndex);\n  console.log(indexDel)\n//   deleteProject();\n//  button.removeAttribute('style'); \n}));\ndelProject.forEach((button) => button.addEventListener('mouseleave', (e) => {\n    button.removeAttribute('style');\n}));\n}\ndel1();\ndelProject.forEach((button) => button.addEventListener('click', (e) => {\n\n  delProject = Array.from(document.querySelectorAll('#projects-list button'));\n  projects = Array.from(document.querySelectorAll('#projects-list > div.project'));  \n  console.log(indexDel);\n\n  delProject.splice(indexDel, 1);\n  node[indexDel].remove(indexDel);\n\n   // delProject[indexDel].remove(indexDel);\n    projectsList.splice(indexDel, 1);\n    projects.splice(indexDel, 1);\n\n   j = j-1; \n   delProject = Array.from(document.querySelectorAll('#projects-list button'));\n   projects = Array.from(document.querySelectorAll('#projects-list > div.project')); \n   console.log(delProject);\n   console.log(projects);\n   console.log(indexDel);\n   console.log(indexProj);\n   node = document.querySelectorAll('#projects-list > div.project');\n\n\n}))\n\n\nfunction backgroundProject(){\n  let click = true;\n  projects = Array.from(document.querySelectorAll('#projects-list > div.project'));   \n  projects.forEach((div) => div.addEventListener('mouseover', (e) => {\n       //   if ( click == true){\n           div.setAttribute('style', 'background-color: grey');\n       //   }\n         }));\n  projects.forEach((div) => div.addEventListener('mouseleave', (e) => {\n//       if ( click == true){\n        div.removeAttribute('style');\n        click = true;\n//   \n    }));\n\n    projects.forEach((div) => div.addEventListener('click', (e) =>{\n      \n      function projectNumber(div){\n             if( div.style.backgroundColor == 'red'){\n             return div;\n           }};\n          if (click == true){\n               div.style.backgroundColor = 'red';\n               indexProj = projects.findIndex(projectNumber);\n               click = false;\n           }else if( click == false){\n         //      div.style.backgroundColor = '';\n               click = true;\n           }  \n    }));\n\n}\n\n  function removeProject(){\n    console.log('hi');\n    }\n    removeProject();\n  \n\n\n\n\n\n\n\n\n//function deleteProject(){\n//delProject.splice(indexDel, 1);\n// delProject[indexDel].remove(indexDel);\n//projectsList.splice(indexDel, 1);\n//projects[indexDel].remove(indexDel);\n//projects.splice(indexDel, 1);\n//}\n\n*/\n\n//# sourceURL=webpack://todo-list/./src/others.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/others.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;