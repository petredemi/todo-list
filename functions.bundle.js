/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/functions.js":
/*!**************************!*\
  !*** ./src/functions.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProject: () => (/* binding */ addProject),\n/* harmony export */   addTasks: () => (/* binding */ addTasks),\n/* harmony export */   d: () => (/* binding */ d),\n/* harmony export */   deleteProjectTasks: () => (/* binding */ deleteProjectTasks),\n/* harmony export */   domTask: () => (/* binding */ domTask),\n/* harmony export */   endDate: () => (/* binding */ endDate),\n/* harmony export */   getProject: () => (/* binding */ getProject),\n/* harmony export */   getProjectTasks: () => (/* binding */ getProjectTasks),\n/* harmony export */   getTask: () => (/* binding */ getTask),\n/* harmony export */   hourDue: () => (/* binding */ hourDue),\n/* harmony export */   n: () => (/* binding */ n),\n/* harmony export */   projectStatus: () => (/* binding */ projectStatus),\n/* harmony export */   projectsList: () => (/* binding */ projectsList),\n/* harmony export */   s: () => (/* binding */ s),\n/* harmony export */   t: () => (/* binding */ t),\n/* harmony export */   taskBackground: () => (/* binding */ taskBackground),\n/* harmony export */   taskStatus: () => (/* binding */ taskStatus),\n/* harmony export */   tasksList: () => (/* binding */ tasksList)\n/* harmony export */ });\n\n\n\n//add projects\nconst projectsList = [];\nconst tasksList = [];\nlet month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]\n\n\nconst n = document.querySelector('#projectTitle');\nconst s = document.querySelector('#startDate');\nconst endDate = document.querySelector('#endDate');\nconst projectStatus = document.querySelector('#projectStatus');\n\nfunction addProject(){ //add projects items\n    function createProject(name){ //create  project object with factory function\n      name = n.value;\n      const start = s.value;\n      const end = endDate.value;\n      const status = projectStatus.checked;\n      const projectTasks = [];\n      return { name, start, end, status, projectTasks};\n    }\n    const item = createProject(n.value);\n    projectsList.push(item);\n    projectsList.sort((start1, start2) => {\n          if (start1.start < start2.start) return -1;\n          if (start1.start > start2.start) return 1;\n            return 0;\n      });\n}\n//add todo tasks\n    const t = document.querySelector('#title');\n    const d = document.querySelector('#date');\n    const hourDue = document.querySelector('#hourDue');\n    const taskStatus = document.querySelector('#taskStatus');\n\nfunction addTasks(x){ //add to do items\n    function createTask(title){ //create task object with factory function\n      title = t.value;\n      const date = d.value;\n      const hour = hourDue.value;\n      const status = taskStatus.checked;\n    return { title, date, hour, status};\n  }\n    const item = createTask();\n      if ( x == undefined){\n          tasksList.push(item);\n          tasksList.sort((hour1, hour2) => {\n             if ( hour1.hour < hour2.hour) return -1;\n            if (  hour1.hour > hour2.hour) return 1;\n\n          return 0;\n       });\n      }\n      if ( x !== undefined ){ \n        projectsList[x].projectTasks.push(item);\n        projectsList[x].projectTasks.sort((date1, date2) => {\n          if ( date1.date < date2.date) return -1;\n          if (  date1.date > date2.date) return 1;\n          return 0;\n      });\n      };\n  };\nfunction domTask(){ //create dom task for each project\n      const todo = document.createElement('div');\n      const todo1 = document.createElement('div');\n      const todo2 = document.createElement('div');\n      const h3 = document.createElement('h3');\n      const btn1 = document.createElement('button');\n\n      todo.classList.add('todo');\n      todo1.classList.add('todo1');\n      todo2.classList.add('task_list');\n      btn1.setAttribute('type', 'submit');\n      btn1.setAttribute('open-data-modal', '');\n      btn1.classList.add('project-task-form', 'btn');\n      btn1.textContent = '+';\n      h3.textContent = 'to do list';\n      todo1.append(h3, btn1);\n      todo.append(todo1, todo2);\n      return todo;\n    };\n//task remove button\nfunction taskBackground(){     //change background for each current day task by mouse over\n      let task = document.querySelectorAll('#task_list > div.task');\n      let delbtn = document.querySelectorAll('#task_list > div.task > div.controlbtn > button.del');\n      let checkbox = document.querySelectorAll('#task_list > div.task input.check');\n      let done  = document.querySelectorAll('#task_list > div.task div.done');\n      let activ = document.querySelectorAll('#task_list > div.task div.activ');\n\n      task.forEach((node, index) => node.addEventListener('mouseover', (e) => {\n          let check = checkbox[index].checked;\n          if(check == false && task[index].style.backgroundColor != 'lightpink'){\n      task[index].setAttribute('style', 'background-color: lightyellow');\n          }\n      }));\n      task.forEach((node, index) => node.addEventListener('mouseleave', (e) => {\n        let check = checkbox[index].checked;\n        if(check == false && task[index].style.backgroundColor != 'lightpink'){\n         task[index].setAttribute('style' , 'background-color: none');\n        }\n      \n      }));\n      delbtn.forEach((node, index) => node.addEventListener('mouseover', (e) => {\n         node.style.backgroundColor = 'yellow';\n        }));   \n      delbtn.forEach((node, index) => node.addEventListener('mouseleave', (e) => {\n            node.setAttribute('style', 'background-color: none');\n       }));\n\n      checkbox.forEach((node, index) => node.addEventListener('change', (e) => {\n          console.log(checkbox[index].checked);\n          tasksList[index].status = checkbox[index].checked;\n          localStorage.setItem(`tsk${index}`, JSON.stringify(tasksList[index]));\n          if ( checkbox[index].checked == true){\n            task[index].setAttribute('style', 'background-color: mediumseagreen; color: white');\n            done[index].setAttribute('style', 'display: block');\n            activ[index].setAttribute('style', 'display: none');\n            console.log(tasksList);\n          } else if(checkbox[index].checked == false){\n            task[index].setAttribute('style', 'background-color: none');\n            done[index].setAttribute('style', 'display: none');\n            activ[index].setAttribute('style', 'display: block');\n          }\n      }));\n  }\n \n  function deleteProjectTasks(){\n    let  btn = document.querySelectorAll('div.todo > div.task_list > div.task  button') // list del btn for task project\n    let  task = document.querySelectorAll('div.item1 > div.todo > div.task_list > div.task'); \n    let  tsklist = document.querySelectorAll('div.task_list');// get index for each project task list\n    function checkIndex(div){\n      if(div.style.backgroundColor == 'lightyellow'){\n         return div;\n        }\n      }\n      btn.forEach((button, index) => button.addEventListener('mouseenter', (e) => {\n          btn[index].setAttribute( 'style', 'background-color: red');\n      }));\n      btn.forEach((button, index) => button.addEventListener('mouseleave', (e) => {\n        btn[index].setAttribute( 'style', 'background-color: none');\n      }));\n  let indextsk; // index of child task\n  let arrT; // arrey for children\n  let indexP; // project index\n      tsklist.forEach((node, index ) => node.addEventListener('mouseover', (e) => {\n        indexP = index;\n            arrT = Array.from(tsklist[index].children);\n            indextsk = arrT.findIndex(checkIndex);\n        })); \n      btn.forEach((node, index) => node.addEventListener('click', (e) => {\n          if ( btn[index].style.backgroundColor == 'red'){\n            task[index].remove();\n            arrT.splice(indextsk, 1);\n          }\n          projectsList[indexP].projectTasks.splice(indextsk, 1);\n      }));\n}\n\nlet task;\nlet i;\n//let removeindex;  //remove index; v\n  function daytaskDelete(){ //remove button , change color \n    let node1 = document.querySelectorAll('#task_list > div.task > button.del');\n    let node2 = document.querySelectorAll('#task_list > div.task');\n        task = Array.from(node2);\n        function checkIndex(div){\n          if(div.style.backgroundColor == 'lightyellow'){\n             return div;\n            }\n          }\n        node2.forEach((node, index) => node.addEventListener('mouseenter', () => {\n          node1 = document.querySelectorAll('#task_list > div.task > button.del');\n          node2 = document.querySelectorAll('#task_list > div.task');\n          i = task.findIndex(checkIndex);\n\n        }));\n        node1.forEach((button, index) => button.addEventListener('mouseover', (e) => {\n          node1[index].style.backgroundColor = 'yellow';\n      //    console.log( i + 'index');\n          }));   \n         node1.forEach((button, index) => button.addEventListener('mouseleave', (e) => {\n              node1[index].setAttribute('style', 'background-color: none');\n         }));\n         node1.forEach((node, index) => node.addEventListener('click', () => {\n              tasksList.splice(i, 1);\n              task.splice(i, 1);      \n              localStorage.removeItem(`tsk${index}`);\n              console.log(index + 'indextsk')\n              console.log(tasksList);\n              node1[i].remove();\n              node2[i].remove();\n              task = Array.from(node2);\n              node1 = document.querySelectorAll('#task_list > div.task > button.del');\n              node2 = document.querySelectorAll('#task_list > div.task');\n\n          }));\n     //    tasksList.forEach((item, index) =>{\n        //    localStorage.setItem(`tsk${index}`, JSON.stringify(item))\n      //    });\n  \n      };\n\n      \n  function getTask(y){ // from local store\n        let dayTaskList = document.querySelector('#task_list');\n          for (let x = 0; x < tasksList.length; x++ ){\n            const div0 = document.createElement('div');\n            const div1 = document.createElement('div');\n            const div2 = document.createElement('div');\n            const div3 = document.createElement('div');\n            const del = document.createElement('button');\n            const checkbox = document.createElement('input');\n            const div4 = document.createElement('div');\n            const div5 = document.createElement('div');\n            const div6 = document.createElement('div');\n            const div7 = document.createElement('div')\n            const div33 = document.createElement('div')\n            const p1 = document.createElement('p')\n        \n            div0.classList.add('task');\n            div1.classList.add('title');\n            div2.classList.add('date', 'width');\n            div3.classList.add('hour', 'width');\n            del.classList.add('del');\n            div33.classList.add('dateDueTsk')\n            p1.classList.add('startDayTsk')\n        \n\n            checkbox.setAttribute('type', 'checkbox');\n            checkbox.classList.add('check');\n            checkbox.setAttribute('name', 'status');\n      \n            div4.classList.add('status');\n            div5.classList.add('done');\n            div6.classList.add('activ');\n            div5.textContent = 'completed';\n            div6.textContent = 'still active';\n            div7.classList.add('controlbtn')\n\n            div4.append(div5, div6, checkbox);\n                  div1.textContent = tasksList[x].title;\n                  div2.textContent = 'day: ' + tasksList[x].date;\n               //   div3.textContent = 'hour: ' + tasksList[x].hour;\n                  div3.append(p1, div33)\n                  div33.textContent = tasksList[x].hour;\n                  p1.textContent = 'Start:'\n        \n\n                  del.textContent = 'del';\n                  checkbox.checked = tasksList[x].status;\n                  if ( tasksList[x].status == true){\n                      div0.setAttribute('style', 'background-color: mediumseagreen');\n                  }\n                  div7.append(div3, div4, del)\n                  div0.append(div2, div1,div7);\n\n\n                  dayTaskList.appendChild(div0);\n                  dayTaskList.insertBefore(div0, dayTaskList.children[x]);\n                  div2.setAttribute('style', 'display: none');\n                  if( tasksList[x].status == true){\n                    div0.setAttribute('style', 'background-color: mediumseagreen; color: white;');\n                    div5.setAttribute('style', 'display: block');\n                    div6.setAttribute('style', 'display: none');\n                  }\n                  y.push(del); // arrey from delete buttons \n        \n          };\n      }\n      \n  function getProject(x){ // from local store\n        let projects_list = document.querySelector('#projects-list');\n        for ( let i = 0; i < projectsList.length; i++){\n           const div00 = document.createElement('div');\n           const div0 = document.createElement('div');\n           const div1 = document.createElement('div');\n           const div2 = document.createElement('div');\n           const div3 = document.createElement('div');\n           const del = document.createElement('button');\n           const checkbox = document.createElement('input');\n           const div4 = document.createElement('div');\n           const div5 = document.createElement('div');\n           const div6 = document.createElement('div');\n           const div22 = document.createElement('div')\n           const p1 = document.createElement('p')\n           const div33 = document.createElement('div')\n           const p3 = document.createElement('p')\n           const div23 = document.createElement('div')\n\n           div00.classList.add('item1');\n           div0.classList.add('project');\n           div1.classList.add('name');\n           div2.classList.add('start', 'width');\n           div3.classList.add('end', 'width');\n           del.classList.add('del');\n           div22.classList.add('dateDue')\n           p1.classList.add('startDayField')\n           p3.classList.add('endDayField')\n           div33.classList.add('projEndDay')\n           div23.classList.add('startendprj')\n\n           div4.classList.add('status');\n           div5.classList.add('done');\n           div6.classList.add('activ');\n           div5.textContent = 'completed';\n           div6.textContent = 'still active';\n           div4.append(div5, div6, checkbox); \n\n           checkbox.setAttribute('type', 'checkbox');\n           checkbox.classList.add('check');\n           checkbox.setAttribute('name', 'status');\n           del.setAttribute('type', 'submit');\n           div1.textContent = projectsList[i].name;\n          // div22.textContent = projectsList[i].start;\n\n          if(projectsList[i].start === ''){\n            div22.textContent = ''\n          }else{\n              let dmy = projectsList[i].start.split('-')\n              dmy[1] = Number(dmy[1])\n              div22.textContent = dmy[2] + ' ' + month[dmy[1] - 1] + ' ' + dmy[0] \n          }\n           p1.textContent = 'Start:'\n           div2.append(p1, div22)\n          // div2.textContent = 'Start: ' + projectsList[i].start;\n        //   div3.textContent = 'End: ' + projectsList[i].end;\n         //  div33.textContent = projectsList[i].end\n\n         if(projectsList[i].end === ''){\n              div33.textContent = ''\n         }else{\n           let dmyend = projectsList[i].end.split('-')\n           dmyend[1] = Number(dmyend[1])\n           div33.textContent = dmyend[2] + ' ' + month[dmyend[1] - 1] + ' ' + dmyend[0] \n         } \n           p3.textContent = 'End: ';\n           div3.append(p3, div33);\n           div23.append(div2, div3)\n           del.textContent = 'del'\n           checkbox.checked = projectsList[i].status;\n           if ( projectsList[i].status == true){\n            div0.setAttribute('style', 'background-color: darkcyan; color: white');\n            div5.setAttribute('style', 'display: block');\n            div6.setAttribute('style', 'display: none');\n          }\n        //   div0.append(div1, div2, div3, div4, del);\n          div0.append(div23, div1, div4, del);\n\n           div00.append(div0, domTask());\n           projects_list.insertBefore(div00, projects_list.children[i]);\n           x.push(del);\n        }\n    };\n\n  function getProjectTasks(){ // from local store\n        let tasklistProject = document.querySelectorAll('div.item1 > div.todo > div.task_list');  \n        tasklistProject.forEach((item, x) => {\n          for ( let y = 0; y < projectsList[x].projectTasks.length; y++){\n               const div0 = document.createElement('div');\n               const div1 = document.createElement('div');\n               const div2 = document.createElement('div');\n               const div3 = document.createElement('div');\n               const del = document.createElement('button');\n               const checkbox = document.createElement('input');\n               const div4 = document.createElement('div');\n               const div5 = document.createElement('div');\n               const div6 = document.createElement('div');\n      \n               div0.classList.add('task');\n               div1.classList.add('title');\n               div2.classList.add('date', 'width');\n               div3.classList.add('hour', 'width');\n               del.classList.add('del');\n               checkbox.setAttribute('type', 'checkbox');\n               checkbox.classList.add('check');\n               checkbox.setAttribute('name', 'status');\n      \n               div4.classList.add('status');\n               div5.classList.add('done');\n               div6.classList.add('activ');\n               div5.textContent = 'completed';\n               div6.textContent = 'still active';\n               const div8 = document.createElement('div')\n               div8.classList.add('day_hour')\n               const div9 = document.createElement('div')\n               div9.classList.add('check_del')   \n               div4.append(div5, div6, checkbox);\n    \n                div1.textContent = projectsList[x].projectTasks[y].title;\n          //      div2.textContent = 'day: ' + projectsList[x].projectTasks[y].date;\n                let dmytsk = projectsList[x].projectTasks[y].date.split('-')\n                dmytsk[1] = Number(dmytsk[1])\n                div2.textContent =  'day: ' + dmytsk[2] + ' ' + month[dmytsk[1] - 1] + ' ' + dmytsk[0] \n                div3.textContent = 'hour: ' + projectsList[x].projectTasks[y].hour;\n                div8.append(div2, div3)\n                div9.append(div4, del)\n\n                del.textContent = 'del';\n                checkbox.checked = projectsList[x].projectTasks[y].status;\n                if( projectsList[x].projectTasks[y].status == true){\n                  div0.setAttribute('style', 'background-color: mediumseagreen; color: floralwhite;');\n                  div5.setAttribute('style', 'display: block');\n                  div6.setAttribute('style', 'display: none');\n      \n                }\n                div0.append(div8, div1, div9);\n                tasklistProject[x].insertBefore(div0, tasklistProject[x].children[y]);\n              }\n      })  \n}\n\n\n//# sourceURL=webpack://todo-list/./src/functions.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/functions.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;